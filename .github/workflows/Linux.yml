name: Linux

on: [push, pull_request]

jobs:
  build:
    runs-on: ubuntu-18.04
    steps:
      - uses: actions/checkout@v2
        with:
          submodules: recursive
          fetch-depth: 0

      - name: Install buildtools
        run: |
              sudo apt update && sudo apt install -y build-essential gcc binutils curl jq wget \
              && sudo add-apt-repository -y ppa:deadsnakes/ppa \
              && sudo add-apt-repository -y ppa:brightbox/ruby-ng \
              && sudo add-apt-repository -y ppa:hvr/ghc \
              && curl -sL https://deb.nodesource.com/setup_14.x | sudo bash - \
              && sudo apt-key adv --keyserver hkp://keyserver.ubuntu.com:80 \
              --recv-keys 3FA7E0328081BFF6A14DA29AA6A19B38D3D831EF \
              && sudo echo "deb https://download.mono-project.com/repo/ubuntu stable-bionic main" \
              | sudo tee /etc/apt/sources.list.d/mono-official-stable.list \
              && sudo apt update && sudo apt install -y software-properties-common \
              ghc-8.8.1 mono-devel nodejs python3.8 ruby2.7 ruby2.7-dev && sudo rm -rf /var/lib/apt/lists/* \
              && sudo gem install bundler \
              && sudo update-alternatives --install /usr/bin/python3 python3 /usr/bin/python3.6 1 \
              && sudo update-alternatives --install /usr/bin/python3 python3 /usr/bin/python3.8 2 \
              && curl -L https://julialang-s3.julialang.org/bin/linux/x64/1.3/julia-1.3.1-linux-x86_64.tar.gz --output julia-1.3.1-linux-x86_64.tar.gz \
              && echo 'faa707c8343780a6fe5eaf13490355e8190acf8e2c189b9e7ecbddb0fa2643ad  julia-1.3.1-linux-x86_64.tar.gz' > .sha256 \
              && sha256sum -c .sha256 \
              && rm .sha256 \
              && tar xvf julia-1.3.1-linux-x86_64.tar.gz -C $HOME \
              && curl https://sh.rustup.rs -sSf | sh -s -- -y --default-toolchain stable \
              && export PATH=$HOME/julia-1.3.1/bin:/opt/ghc/bin:$HOME/.cargo/bin:$PATH
      
      - name: Install zig
        uses: goto-bus-stop/setup-zig@v1
        with:
          version: master

      - name: Build & Tests
        run: |
              make -C examples
      
      - name: Site
        run: |
              cd site \
              && sudo bundle && sudo jekyll build --destination ../public --config _config.yml,_config.prod.yml
      
      - name: Deploy to GitHub Pages
        if: success()
        uses: crazy-max/ghaction-github-pages@v2
        with:
          target_branch: gh-pages
          build_dir: public
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
